=begin
#DialMyCalls API

#The DialMyCalls API

OpenAPI spec version: 2.0.1
Contact: support@dialmycalls.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module DialMyCalls
  class VanityNumbersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Delete Vanity Number
    # Delete a vanity number. <br><br> Returns the following if a valid identifier was provided, and returns an error otherwise. <br><br> ``` curl -i -H \"Content-Type: application/json\" -X DELETE https://$API_KEY@api.dialmycalls.com/2.0/keyword/$VANITYNUMBER_ID ```
    # @param vanity_number_id VanityNumberId
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def delete_vanity_number_by_id(vanity_number_id, opts = {})
      data, _status_code, _headers = delete_vanity_number_by_id_with_http_info(vanity_number_id, opts)
      return data
    end

    # Delete Vanity Number
    # Delete a vanity number. &lt;br&gt;&lt;br&gt; Returns the following if a valid identifier was provided, and returns an error otherwise. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X DELETE https://$API_KEY@api.dialmycalls.com/2.0/keyword/$VANITYNUMBER_ID &#x60;&#x60;&#x60;
    # @param vanity_number_id VanityNumberId
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def delete_vanity_number_by_id_with_http_info(vanity_number_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: VanityNumbersApi.delete_vanity_number_by_id ..."
      end
      # verify the required parameter 'vanity_number_id' is set
      fail ArgumentError, "Missing the required parameter 'vanity_number_id' when calling VanityNumbersApi.delete_vanity_number_by_id" if vanity_number_id.nil?
      # resource path
      local_var_path = "/vanitynumber/{VanityNumberId}".sub('{format}','json').sub('{' + 'VanityNumberId' + '}', vanity_number_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json', 'application/xml']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json', 'application/xml']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VanityNumbersApi#delete_vanity_number_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Vanity Number
    # Retrieve a vanity number. <br><br> Returns a vanitynumber object if a valid identifier was provided, and returns an error otherwise. <br><br> ``` curl -i -H \"Content-Type: application/json\" -X GET https://$API_KEY@api.dialmycalls.com/2.0/vanitynumber/$VANITYNUMBER_ID ```
    # @param vanity_number_id VanityNumberId
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def get_vanity_number_by_id(vanity_number_id, opts = {})
      data, _status_code, _headers = get_vanity_number_by_id_with_http_info(vanity_number_id, opts)
      return data
    end

    # Get Vanity Number
    # Retrieve a vanity number. &lt;br&gt;&lt;br&gt; Returns a vanitynumber object if a valid identifier was provided, and returns an error otherwise. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X GET https://$API_KEY@api.dialmycalls.com/2.0/vanitynumber/$VANITYNUMBER_ID &#x60;&#x60;&#x60;
    # @param vanity_number_id VanityNumberId
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def get_vanity_number_by_id_with_http_info(vanity_number_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: VanityNumbersApi.get_vanity_number_by_id ..."
      end
      # verify the required parameter 'vanity_number_id' is set
      fail ArgumentError, "Missing the required parameter 'vanity_number_id' when calling VanityNumbersApi.get_vanity_number_by_id" if vanity_number_id.nil?
      # resource path
      local_var_path = "/vanitynumber/{VanityNumberId}".sub('{format}','json').sub('{' + 'VanityNumberId' + '}', vanity_number_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json', 'application/xml']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json', 'application/xml']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VanityNumbersApi#get_vanity_number_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Vanity Numbers
    # Retrieve a list of vanity numbers. <br><br> Returns a list of vanitynumber objects. <br><br> ``` curl -i -H \"Content-Type: application/json\" -X GET https://$API_KEY@api.dialmycalls.com/2.0/vanitynumbers ```
    # @param [Hash] opts the optional parameters
    # @option opts [String] :range Range (ie \&quot;records&#x3D;201-300\&quot;) of vanitynumbers requested
    # @return [Object]
    def get_vanity_numbers(opts = {})
      data, _status_code, _headers = get_vanity_numbers_with_http_info(opts)
      return data
    end

    # List Vanity Numbers
    # Retrieve a list of vanity numbers. &lt;br&gt;&lt;br&gt; Returns a list of vanitynumber objects. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X GET https://$API_KEY@api.dialmycalls.com/2.0/vanitynumbers &#x60;&#x60;&#x60;
    # @param [Hash] opts the optional parameters
    # @option opts [String] :range Range (ie \&quot;records&#x3D;201-300\&quot;) of vanitynumbers requested
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def get_vanity_numbers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: VanityNumbersApi.get_vanity_numbers ..."
      end
      # resource path
      local_var_path = "/vanitynumbers".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json', 'application/xml']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json', 'application/xml']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)
      header_params[:'Range'] = opts[:'range'] if !opts[:'range'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VanityNumbersApi#get_vanity_numbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Vanity Number
    # Update a vanity number. <br><br> Returns a vanitynumber object if a valid identifier was provided, and returns an error otherwise. <br><br> ``` curl -i -H \"Content-Type: application/json\" -X PUT -d \"{\\\"ptt_number_id\\\":\\\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee\\\",\\\"call_options\\\":{\\\"voicemail\\\":true}}\" https://$API_KEY@api.dialmycalls.com/2.0/vanitynumber/$VANITYNUMBER_ID ```
    # @param update_vanity_number_by_id_parameters Request body
    # @param vanity_number_id VanityNumberId
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def update_vanity_number_by_id(update_vanity_number_by_id_parameters, vanity_number_id, opts = {})
      data, _status_code, _headers = update_vanity_number_by_id_with_http_info(update_vanity_number_by_id_parameters, vanity_number_id, opts)
      return data
    end

    # Update Vanity Number
    # Update a vanity number. &lt;br&gt;&lt;br&gt; Returns a vanitynumber object if a valid identifier was provided, and returns an error otherwise. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X PUT -d \&quot;{\\\&quot;ptt_number_id\\\&quot;:\\\&quot;aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee\\\&quot;,\\\&quot;call_options\\\&quot;:{\\\&quot;voicemail\\\&quot;:true}}\&quot; https://$API_KEY@api.dialmycalls.com/2.0/vanitynumber/$VANITYNUMBER_ID &#x60;&#x60;&#x60;
    # @param update_vanity_number_by_id_parameters Request body
    # @param vanity_number_id VanityNumberId
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def update_vanity_number_by_id_with_http_info(update_vanity_number_by_id_parameters, vanity_number_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: VanityNumbersApi.update_vanity_number_by_id ..."
      end
      # verify the required parameter 'update_vanity_number_by_id_parameters' is set
      fail ArgumentError, "Missing the required parameter 'update_vanity_number_by_id_parameters' when calling VanityNumbersApi.update_vanity_number_by_id" if update_vanity_number_by_id_parameters.nil?
      # verify the required parameter 'vanity_number_id' is set
      fail ArgumentError, "Missing the required parameter 'vanity_number_id' when calling VanityNumbersApi.update_vanity_number_by_id" if vanity_number_id.nil?
      # resource path
      local_var_path = "/vanitynumber/{VanityNumberId}".sub('{format}','json').sub('{' + 'VanityNumberId' + '}', vanity_number_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json', 'application/xml']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json', 'application/xml']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(update_vanity_number_by_id_parameters)
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VanityNumbersApi#update_vanity_number_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
